/**
 * Created by hetiezheng711 on 2015/12/23.
 */
var events = require("events");
var util = require('util');

function LoopEvents(parent,childCount) {
    events.EventEmitter.call(this,arguments);
    this._childCount = childCount || 0;
    this._parent = parent;
    this.hadDoneChildCount = 0;

    this.on("childDone", function () {
        ++this.hadDoneChildCount;
        if (this.hadDoneChildCount == this._childCount) {
            this.emit("childAllDone", arguments);
        }
    });
    this.on("childAllDone", function () {
        if (this._parent) {
            this._parent.emit("childDone", arguments);
        } else { //to root
            this.emit("allDone",arguments);
        }
    });
}
LoopEvents.prototype.parent = function (parent) {
    this._parent = parent;
}
LoopEvents.prototype.childCount = function (childCount) {
    this._childCount = childCount;
}
util.inherits(LoopEvents, events.EventEmitter);

module.exports = LoopEvents;


//
  var fs = require("fs");
var _ = require("underscore");
var path = require("path");
var util = require('util');
var LoopEvents = require("./loopevents");

var folder = "D:/tools/";

var root = new LoopEvents();
root.on("allDone", function () {
    console.log("all Done");
});


function loopdir(folder, parent) {
    fs.readdir(folder, function (err, files) {
        if (files.length == 0) {
            parent.emit("childAllDone")
            return;
        }
        parent.childCount(files.length);
        _.each(files, function (file) {
            var curLoopEvents = new LoopEvents(parent);
            var absPath = path.join(folder, file);
            fs.stat(absPath, function (err, stas) {
                if (stas.isDirectory()) {
                    loopdir(absPath, curLoopEvents);
                } else {
                    curLoopEvents.emit("childAllDone", absPath);
                }
            })
        })
    })
}


loopdir(folder, root);
